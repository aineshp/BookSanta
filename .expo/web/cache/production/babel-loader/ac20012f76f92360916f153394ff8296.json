{"ast":null,"code":"'use strict';var utils=require(\"./../utils\");var transformData=require(\"./transformData\");var isCancel=require(\"../cancel/isCancel\");var defaults=require(\"../defaults\");var isAbsoluteURL=require(\"./../helpers/isAbsoluteURL\");var combineURLs=require(\"./../helpers/combineURLs\");function throwIfCancellationRequested(config){if(config.cancelToken){config.cancelToken.throwIfRequested();}}module.exports=function dispatchRequest(config){throwIfCancellationRequested(config);if(config.baseURL&&!isAbsoluteURL(config.url)){config.url=combineURLs(config.baseURL,config.url);}config.headers=config.headers||{};config.data=transformData(config.data,config.headers,config.transformRequest);config.headers=utils.merge(config.headers.common||{},config.headers[config.method]||{},config.headers||{});utils.forEach(['delete','get','head','post','put','patch','common'],function cleanHeaderConfig(method){delete config.headers[method];});var adapter=config.adapter||defaults.adapter;return adapter(config).then(function onAdapterResolution(response){throwIfCancellationRequested(config);response.data=transformData(response.data,response.headers,config.transformResponse);return response;},function onAdapterRejection(reason){if(!isCancel(reason)){throwIfCancellationRequested(config);if(reason&&reason.response){reason.response.data=transformData(reason.response.data,reason.response.headers,config.transformResponse);}}return Promise.reject(reason);});};","map":{"version":3,"sources":["C:/Users/aines/Desktop/book-santa-stage-11-master/node_modules/react-native-google-books/node_modules/axios/lib/core/dispatchRequest.js"],"names":["utils","require","transformData","isCancel","defaults","isAbsoluteURL","combineURLs","throwIfCancellationRequested","config","cancelToken","throwIfRequested","module","exports","dispatchRequest","baseURL","url","headers","data","transformRequest","merge","common","method","forEach","cleanHeaderConfig","adapter","then","onAdapterResolution","response","transformResponse","onAdapterRejection","reason","Promise","reject"],"mappings":"AAAA,aAEA,GAAIA,CAAAA,KAAK,CAAGC,OAAO,cAAnB,CACA,GAAIC,CAAAA,aAAa,CAAGD,OAAO,mBAA3B,CACA,GAAIE,CAAAA,QAAQ,CAAGF,OAAO,sBAAtB,CACA,GAAIG,CAAAA,QAAQ,CAAGH,OAAO,eAAtB,CACA,GAAII,CAAAA,aAAa,CAAGJ,OAAO,8BAA3B,CACA,GAAIK,CAAAA,WAAW,CAAGL,OAAO,4BAAzB,CAKA,QAASM,CAAAA,4BAAT,CAAsCC,MAAtC,CAA8C,CAC5C,GAAIA,MAAM,CAACC,WAAX,CAAwB,CACtBD,MAAM,CAACC,WAAP,CAAmBC,gBAAnB,GACD,CACF,CAQDC,MAAM,CAACC,OAAP,CAAiB,QAASC,CAAAA,eAAT,CAAyBL,MAAzB,CAAiC,CAChDD,4BAA4B,CAACC,MAAD,CAA5B,CAGA,GAAIA,MAAM,CAACM,OAAP,EAAkB,CAACT,aAAa,CAACG,MAAM,CAACO,GAAR,CAApC,CAAkD,CAChDP,MAAM,CAACO,GAAP,CAAaT,WAAW,CAACE,MAAM,CAACM,OAAR,CAAiBN,MAAM,CAACO,GAAxB,CAAxB,CACD,CAGDP,MAAM,CAACQ,OAAP,CAAiBR,MAAM,CAACQ,OAAP,EAAkB,EAAnC,CAGAR,MAAM,CAACS,IAAP,CAAcf,aAAa,CACzBM,MAAM,CAACS,IADkB,CAEzBT,MAAM,CAACQ,OAFkB,CAGzBR,MAAM,CAACU,gBAHkB,CAA3B,CAOAV,MAAM,CAACQ,OAAP,CAAiBhB,KAAK,CAACmB,KAAN,CACfX,MAAM,CAACQ,OAAP,CAAeI,MAAf,EAAyB,EADV,CAEfZ,MAAM,CAACQ,OAAP,CAAeR,MAAM,CAACa,MAAtB,GAAiC,EAFlB,CAGfb,MAAM,CAACQ,OAAP,EAAkB,EAHH,CAAjB,CAMAhB,KAAK,CAACsB,OAAN,CACE,CAAC,QAAD,CAAW,KAAX,CAAkB,MAAlB,CAA0B,MAA1B,CAAkC,KAAlC,CAAyC,OAAzC,CAAkD,QAAlD,CADF,CAEE,QAASC,CAAAA,iBAAT,CAA2BF,MAA3B,CAAmC,CACjC,MAAOb,CAAAA,MAAM,CAACQ,OAAP,CAAeK,MAAf,CAAP,CACD,CAJH,EAOA,GAAIG,CAAAA,OAAO,CAAGhB,MAAM,CAACgB,OAAP,EAAkBpB,QAAQ,CAACoB,OAAzC,CAEA,MAAOA,CAAAA,OAAO,CAAChB,MAAD,CAAP,CAAgBiB,IAAhB,CAAqB,QAASC,CAAAA,mBAAT,CAA6BC,QAA7B,CAAuC,CACjEpB,4BAA4B,CAACC,MAAD,CAA5B,CAGAmB,QAAQ,CAACV,IAAT,CAAgBf,aAAa,CAC3ByB,QAAQ,CAACV,IADkB,CAE3BU,QAAQ,CAACX,OAFkB,CAG3BR,MAAM,CAACoB,iBAHoB,CAA7B,CAMA,MAAOD,CAAAA,QAAP,CACD,CAXM,CAWJ,QAASE,CAAAA,kBAAT,CAA4BC,MAA5B,CAAoC,CACrC,GAAI,CAAC3B,QAAQ,CAAC2B,MAAD,CAAb,CAAuB,CACrBvB,4BAA4B,CAACC,MAAD,CAA5B,CAGA,GAAIsB,MAAM,EAAIA,MAAM,CAACH,QAArB,CAA+B,CAC7BG,MAAM,CAACH,QAAP,CAAgBV,IAAhB,CAAuBf,aAAa,CAClC4B,MAAM,CAACH,QAAP,CAAgBV,IADkB,CAElCa,MAAM,CAACH,QAAP,CAAgBX,OAFkB,CAGlCR,MAAM,CAACoB,iBAH2B,CAApC,CAKD,CACF,CAED,MAAOG,CAAAA,OAAO,CAACC,MAAR,CAAeF,MAAf,CAAP,CACD,CA1BM,CAAP,CA2BD,CA7DD","sourcesContent":["'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar isAbsoluteURL = require('./../helpers/isAbsoluteURL');\nvar combineURLs = require('./../helpers/combineURLs');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n"]},"metadata":{},"sourceType":"script"}