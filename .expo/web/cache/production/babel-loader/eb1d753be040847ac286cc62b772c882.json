{"ast":null,"code":"'use strict';var defaults=require(\"./../defaults\");var utils=require(\"./../utils\");var InterceptorManager=require(\"./InterceptorManager\");var dispatchRequest=require(\"./dispatchRequest\");function Axios(instanceConfig){this.defaults=instanceConfig;this.interceptors={request:new InterceptorManager(),response:new InterceptorManager()};}Axios.prototype.request=function request(config){if(typeof config==='string'){config=utils.merge({url:arguments[0]},arguments[1]);}config=utils.merge(defaults,{method:'get'},this.defaults,config);config.method=config.method.toLowerCase();var chain=[dispatchRequest,undefined];var promise=Promise.resolve(config);this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor){chain.unshift(interceptor.fulfilled,interceptor.rejected);});this.interceptors.response.forEach(function pushResponseInterceptors(interceptor){chain.push(interceptor.fulfilled,interceptor.rejected);});while(chain.length){promise=promise.then(chain.shift(),chain.shift());}return promise;};utils.forEach(['delete','get','head','options'],function forEachMethodNoData(method){Axios.prototype[method]=function(url,config){return this.request(utils.merge(config||{},{method:method,url:url}));};});utils.forEach(['post','put','patch'],function forEachMethodWithData(method){Axios.prototype[method]=function(url,data,config){return this.request(utils.merge(config||{},{method:method,url:url,data:data}));};});module.exports=Axios;","map":{"version":3,"sources":["C:/Users/aines/Desktop/book-santa-stage-11-master/node_modules/react-native-google-books/node_modules/axios/lib/core/Axios.js"],"names":["defaults","require","utils","InterceptorManager","dispatchRequest","Axios","instanceConfig","interceptors","request","response","prototype","config","merge","url","arguments","method","toLowerCase","chain","undefined","promise","Promise","resolve","forEach","unshiftRequestInterceptors","interceptor","unshift","fulfilled","rejected","pushResponseInterceptors","push","length","then","shift","forEachMethodNoData","forEachMethodWithData","data","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar defaults = require('./../defaults');\nvar utils = require('./../utils');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n\n  config = utils.merge(defaults, {method: 'get'}, this.defaults, config);\n  config.method = config.method.toLowerCase();\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n"]},"metadata":{},"sourceType":"script"}