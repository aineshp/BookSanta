{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){return function(){var Super=_getPrototypeOf(Derived),result;if(_isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React,{Component}from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import db from\"../config\";import firebase from'firebase';import SwipeableFlatlist from\"../components/SwipeableFlatlist\";import{RFValue}from'react-native-responsive-fontsize';var NotificationScreen=function(_Component){_inherits(NotificationScreen,_Component);var _super=_createSuper(NotificationScreen);function NotificationScreen(props){var _this;_classCallCheck(this,NotificationScreen);_this=_super.call(this,props);_this.getNotifications=function(){_this.notificationRef=db.collection(\"all_notifications\").where(\"notification_status\",\"==\",\"unread\").where(\"targeted_user_id\",'==',_this.state.userId).onSnapshot(function(snapshot){var allNotifications=[];snapshot.docs.map(function(doc){var notification=doc.data();notification[\"doc_id\"]=doc.id;allNotifications.push(notification);});_this.setState({allNotifications:allNotifications});});};_this.keyExtractor=function(item,index){return index.toString();};_this.renderItem=function(_ref){var item=_ref.item,index=_ref.index;return React.createElement(ListItem,{key:index,leftElement:React.createElement(Icon,{name:\"book\",type:\"font-awesome\",color:\"#696969\"}),title:item.book_name,titleStyle:{color:'black',fontWeight:'bold'},subtitle:item.message,bottomDivider:true});};_this.state={userID:firebase.auth().currentUser.email,allNotifications:[]};_this.notificationRef=null;return _this;}_createClass(NotificationScreen,[{key:\"componentDidMount\",value:function componentDidMount(){this.getNotifications();}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.notificationRef();}},{key:\"render\",value:function render(){return React.createElement(View,{style:styles.container},React.createElement(View,{style:{flex:0.13}},React.createElement(MyHeader,{title:\"Notifications\",navigation:this.props.navigation})),React.createElement(View,{style:{flex:0.8}},this.state.allNotifications.length===0?React.createElement(View,{style:styles.imageView},React.createElement(Image,{source:require(\"../assets/Notification.png\")}),React.createElement(Text,{style:{fontSize:25}},\"You have no notifications\")):React.createElement(SwipeableFlatlist,{allNotifications:this.state.allNotifications})));}}]);return NotificationScreen;}(Component);export{NotificationScreen as default};var styles=StyleSheet.create({container:{flex:1,backgroundColor:'#deeeed'},imageView:{flex:1,justifyContent:'center',alignItems:'center'},LiTitle:{color:'black',fontWeight:'bold'}});","map":{"version":3,"sources":["C:/Users/aines/Desktop/book-santa-stage-11-master/screens/NotificationScreen.js"],"names":["React","Component","db","firebase","SwipeableFlatlist","RFValue","NotificationScreen","props","getNotifications","notificationRef","collection","where","state","userId","onSnapshot","snapshot","allNotifications","docs","map","doc","notification","data","id","push","setState","keyExtractor","item","index","toString","renderItem","book_name","color","fontWeight","message","userID","auth","currentUser","email","styles","container","flex","navigation","length","imageView","require","fontSize","StyleSheet","create","backgroundColor","justifyContent","alignItems","LiTitle"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\r\nimport {View,Text,StyleSheet} from 'react-native';\r\nimport db from '../config';\r\nimport firebase from 'firebase';\r\nimport SwipeableFlatlist from '../components/SwipeableFlatlist';\r\nimport {RFValue} from 'react-native-responsive-fontsize';\r\nexport default class NotificationScreen extends Component{\r\nconstructor(props){\r\n    super(props);\r\n    this.state={\r\n        userID:firebase.auth().currentUser.email,\r\n        allNotifications:[],\r\n\r\n    }\r\n    this.notificationRef=null;\r\n\r\n  \r\n    }\r\n  \r\n    getNotifications=()=>{\r\n      this.notificationRef = db.collection(\"all_notifications\")\r\n      .where(\"notification_status\", \"==\", \"unread\")\r\n      .where(\"targeted_user_id\",'==',this.state.userId)\r\n      .onSnapshot((snapshot)=>{\r\n        var allNotifications =  []\r\n        snapshot.docs.map((doc) =>{\r\n          var notification = doc.data()\r\n          notification[\"doc_id\"] = doc.id\r\n          allNotifications.push(notification)\r\n        });\r\n        this.setState({\r\n            allNotifications : allNotifications\r\n        });\r\n      })\r\n    }\r\n  \r\n    componentDidMount(){\r\n      this.getNotifications()\r\n    }\r\n  \r\n    componentWillUnmount(){\r\n      this.notificationRef()\r\n    }\r\n  \r\n    keyExtractor = (item, index) => index.toString()\r\n  \r\n    renderItem = ({item,index}) =>{\r\n        return (\r\n          <ListItem\r\n            key={index}\r\n            leftElement={<Icon name=\"book\" type=\"font-awesome\" color ='#696969'/>}\r\n            title={item.book_name}\r\n            titleStyle={{ color: 'black', fontWeight: 'bold' }}\r\n            subtitle={item.message}\r\n            bottomDivider\r\n          />\r\n        )\r\n   }\r\n  \r\n   render(){\r\n    return(\r\n      <View style={styles.container}>\r\n        <View style={{flex:0.13}}>\r\n          <MyHeader title={\"Notifications\"} navigation={this.props.navigation}/>\r\n        </View>\r\n        <View style={{flex:0.8}}>\r\n          {\r\n            this.state.allNotifications.length === 0\r\n            ?(\r\n              <View style={styles.imageView}>\r\n                <Image\r\n                source={require('../assets/Notification.png')}/>\r\n                <Text style={{fontSize:25}}>You have no notifications</Text>\r\n              </View>\r\n            )\r\n            :(\r\n              <SwipeableFlatlist allNotifications={this.state.allNotifications}/>\r\n            )\r\n          }\r\n        </View>\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container : {\r\n    flex : 1,\r\n    backgroundColor:'#deeeed'\r\n  },\r\n  imageView:{\r\n    flex:1,\r\n    justifyContent:'center',\r\n    alignItems:'center'\r\n  },\r\n  LiTitle:{\r\n    color: 'black',\r\n    fontWeight: 'bold'\r\n  }\r\n})"]},"metadata":{},"sourceType":"module"}