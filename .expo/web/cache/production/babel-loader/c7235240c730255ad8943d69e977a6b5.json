{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){return function(){var Super=_getPrototypeOf(Derived),result;if(_isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React,{Component}from'react';import{TextComponent}from\"react-native-web/dist/index\";import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import TextInput from\"react-native-web/dist/exports/TextInput\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import MyHeader from\"../components/MyHeader\";import{RFValue}from'react-native-responsive-fontsize';import firebase from'firebase';import db from\"../config\";var SettingsScreen=function(_Component){_inherits(SettingsScreen,_Component);var _super=_createSuper(SettingsScreen);function SettingsScreen(){var _this;_classCallCheck(this,SettingsScreen);_this=_super.call(this);_this.getUserDetails=function(){var email=firebase.auth().currentUser.email;db.collection('users').where('email_id','==',email).get().then(function(snapshot){snapshot.forEach(function(doc){var data=doc.data();_this.setState({emailID:data.email_id,firstName:data.first_name,lastName:data.last_name,address:data.address,contact:data.contact,docID:doc.id});});});};_this.updateUserDetails=function(){db.collection('users').doc(_this.state.docID).update({\"first_name\":_this.state.firstName,\"last_name\":_this.state.lastName,\"address\":_this.state.address,\"contact\":_this.state.contact});Alert.alert(\"Profile Updated Successfully\");};_this.state={emailID:'',firstName:'',lastName:'',address:'',contact:'',docID:''};return _this;}_createClass(SettingsScreen,[{key:\"componentDidMount\",value:function componentDidMount(){this.getUserDetails();}},{key:\"render\",value:function render(){var _this2=this;return React.createElement(View,{style:{flex:1}},React.createElement(View,{style:{flex:0.12}},React.createElement(MyHeader,{title:\"Settings\",navigation:this.props.navigation})),React.createElement(View,{style:styles.formContainer},React.createElement(View,{style:{flex:0.66,padding:RFValue(10)}},React.createElement(Text,{style:styles.label},\"First Name \"),React.createElement(TextInput,{style:styles.formTextInput,placeholder:\"First Name\",maxLength:12,onChangeText:function onChangeText(text){_this2.setState({firstName:text});},value:this.state.firstName}),React.createElement(Text,{style:styles.label},\"Last Name \"),React.createElement(TextInput,{style:styles.formTextInput,placeholder:\"Last Name\",maxLength:12,onChangeText:function onChangeText(text){_this2.setState({lastName:text});},value:this.state.lastName}),React.createElement(Text,{style:styles.label},\"Contact \"),React.createElement(TextInput,{style:styles.formTextInput,placeholder:\"Contact\",maxLength:10,keyboardType:\"numeric\",onChangeText:function onChangeText(text){_this2.setState({contact:text});},value:this.state.contact}),React.createElement(Text,{style:styles.label},\"Address \"),React.createElement(TextInput,{style:styles.formTextInput,placeholder:\"Address\",multiline:true,onChangeText:function onChangeText(text){_this2.setState({address:text});},value:this.state.address})),React.createElement(View,{style:styles.buttonView},React.createElement(TouchableOpacity,{style:styles.button,onPress:function onPress(){_this2.updateUserDetails();}},React.createElement(Text,{style:styles.buttonText},\"Save\")))));}}]);return SettingsScreen;}(Component);export{SettingsScreen as default};var styles=StyleSheet.create({container:{flex:1,alignItems:\"center\",justifyContent:\"center\",backgroundColor:\"lightyellow\"},formContainer:{flex:0.88,justifyContent:'center'},label:{fontSize:RFValue(18),color:\"#717D7E\",fontWeight:'bold',padding:RFValue(10),marginLeft:RFValue(20)},formTextInput:{width:\"90%\",height:RFValue(50),padding:RFValue(10),borderWidth:1,borderRadius:2,borderColor:\"grey\",marginBottom:RFValue(20),marginLeft:RFValue(20)},button:{width:\"75%\",height:RFValue(60),justifyContent:\"center\",alignItems:\"center\",borderRadius:RFValue(50),backgroundColor:\"blue\",shadowColor:\"#000\",shadowOffset:{width:0,height:8},shadowOpacity:0.44,shadowRadius:10.32,elevation:16,marginTop:RFValue(20)},buttonView:{flex:0.22,alignItems:\"center\",marginTop:RFValue(100)},buttonText:{fontSize:RFValue(23),fontWeight:\"bold\",color:\"#fff\"}});","map":{"version":3,"sources":["C:/Users/aines/Desktop/book-santa-stage-11-master/screens/SettingsScreen.js"],"names":["React","Component","TextComponent","MyHeader","RFValue","firebase","db","SettingsScreen","getUserDetails","email","auth","currentUser","collection","where","get","then","snapshot","forEach","doc","data","setState","emailID","email_id","firstName","first_name","lastName","last_name","address","contact","docID","id","updateUserDetails","state","update","Alert","alert","flex","props","navigation","styles","formContainer","padding","label","formTextInput","text","buttonView","button","buttonText","StyleSheet","create","container","alignItems","justifyContent","backgroundColor","fontSize","color","fontWeight","marginLeft","width","height","borderWidth","borderRadius","borderColor","marginBottom","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","marginTop"],"mappings":"m7BAAA,MAAOA,CAAAA,KAAP,EAAcC,SAAd,KAA8B,OAA9B,C,OACQC,a,0VACR,MAAOC,CAAAA,QAAP,8BACA,OAAQC,OAAR,KAAsB,kCAAtB,CACA,MAAOC,CAAAA,QAAP,KAAqB,UAArB,CACA,MAAOC,CAAAA,EAAP,iB,GAEqBC,CAAAA,c,mGACjB,yBAAa,gDACT,wBADS,MAWbC,cAXa,CAWE,UAAI,CAEd,GAAIC,CAAAA,KAAK,CAAGJ,QAAQ,CAACK,IAAT,GAAgBC,WAAhB,CAA4BF,KAAxC,CACCH,EAAE,CAACM,UAAH,CAAc,OAAd,EAAuBC,KAAvB,CAA6B,UAA7B,CAAwC,IAAxC,CAA6CJ,KAA7C,EAAoDK,GAApD,GACCC,IADD,CACM,SAAAC,QAAQ,CAAI,CACdA,QAAQ,CAACC,OAAT,CAAiB,SAAAC,GAAG,CAAI,CACnB,GAAIC,CAAAA,IAAI,CAAGD,GAAG,CAACC,IAAJ,EAAX,CACA,MAAKC,QAAL,CAAc,CACVC,OAAO,CAAGF,IAAI,CAACG,QADL,CAETC,SAAS,CAAGJ,IAAI,CAACK,UAFR,CAGRC,QAAQ,CAAGN,IAAI,CAACO,SAHR,CAIPC,OAAO,CAAGR,IAAI,CAACQ,OAJR,CAKNC,OAAO,CAAGT,IAAI,CAACS,OALT,CAMLC,KAAK,CAAGX,GAAG,CAACY,EANP,CAAd,EAQE,CAVP,EAWG,CAbP,EAcG,CA5BI,OA6BjBC,iBA7BiB,CA6BC,UAAI,CACjBzB,EAAE,CAACM,UAAH,CAAc,OAAd,EAAuBM,GAAvB,CAA2B,MAAKc,KAAL,CAAWH,KAAtC,EAA6CI,MAA7C,CAAoD,CAC/C,aAAc,MAAKD,KAAL,CAAWT,SADsB,CAE9C,YAAc,MAAKS,KAAL,CAAWP,QAFqB,CAG7C,UAAY,MAAKO,KAAL,CAAWL,OAHsB,CAI5C,UAAY,MAAKK,KAAL,CAAWJ,OAJqB,CAApD,EAMSM,KAAK,CAACC,KAAN,CAAY,8BAAZ,EACD,CArCI,CAET,MAAKH,KAAL,CAAW,CACPX,OAAO,CAAC,EADD,CAEPE,SAAS,CAAC,EAFH,CAGPE,QAAQ,CAAC,EAHF,CAIPE,OAAO,CAAC,EAJD,CAKPC,OAAO,CAAC,EALD,CAMPC,KAAK,CAAC,EANC,CAAX,CAFS,aAUZ,C,wFA4B0B,CACd,KAAKrB,cAAL,GACC,C,uCACQ,iBACN,MACE,qBAAC,IAAD,EAAM,KAAK,CAAE,CAAE4B,IAAI,CAAE,CAAR,CAAb,EACE,oBAAC,IAAD,EAAM,KAAK,CAAE,CAAEA,IAAI,CAAE,IAAR,CAAb,EACE,oBAAC,QAAD,EAAU,KAAK,CAAC,UAAhB,CAA2B,UAAU,CAAE,KAAKC,KAAL,CAAWC,UAAlD,EADF,CADF,CAME,oBAAC,IAAD,EAAM,KAAK,CAAEC,MAAM,CAACC,aAApB,EACI,oBAAC,IAAD,EACE,KAAK,CAAE,CACLJ,IAAI,CAAE,IADD,CAELK,OAAO,CAAErC,OAAO,CAAC,EAAD,CAFX,CADT,EAMA,oBAAC,IAAD,EAAM,KAAK,CAAEmC,MAAM,CAACG,KAApB,gBANA,CAOE,oBAAC,SAAD,EACE,KAAK,CAAEH,MAAM,CAACI,aADhB,CAEE,WAAW,CAAE,YAFf,CAGE,SAAS,CAAE,EAHb,CAIE,YAAY,CAAE,sBAACC,IAAD,CAAU,CACtB,MAAI,CAACxB,QAAL,CAAc,CACZG,SAAS,CAAEqB,IADC,CAAd,EAGD,CARH,CASE,KAAK,CAAE,KAAKZ,KAAL,CAAWT,SATpB,EAPF,CAmBA,oBAAC,IAAD,EAAM,KAAK,CAAEgB,MAAM,CAACG,KAApB,eAnBA,CAoBE,oBAAC,SAAD,EACE,KAAK,CAAEH,MAAM,CAACI,aADhB,CAEE,WAAW,CAAE,WAFf,CAGE,SAAS,CAAE,EAHb,CAIE,YAAY,CAAE,sBAACC,IAAD,CAAU,CACtB,MAAI,CAACxB,QAAL,CAAc,CACZK,QAAQ,CAAEmB,IADE,CAAd,EAGD,CARH,CASE,KAAK,CAAE,KAAKZ,KAAL,CAAWP,QATpB,EApBF,CAgCI,oBAAC,IAAD,EAAM,KAAK,CAAEc,MAAM,CAACG,KAApB,aAhCJ,CAiCE,oBAAC,SAAD,EACE,KAAK,CAAEH,MAAM,CAACI,aADhB,CAEE,WAAW,CAAE,SAFf,CAGE,SAAS,CAAE,EAHb,CAIE,YAAY,CAAE,SAJhB,CAKE,YAAY,CAAE,sBAACC,IAAD,CAAU,CACtB,MAAI,CAACxB,QAAL,CAAc,CACZQ,OAAO,CAAEgB,IADG,CAAd,EAGD,CATH,CAUE,KAAK,CAAE,KAAKZ,KAAL,CAAWJ,OAVpB,EAjCF,CA8CI,oBAAC,IAAD,EAAM,KAAK,CAAEW,MAAM,CAACG,KAApB,aA9CJ,CA+CE,oBAAC,SAAD,EACE,KAAK,CAAEH,MAAM,CAACI,aADhB,CAEE,WAAW,CAAE,SAFf,CAGE,SAAS,CAAE,IAHb,CAIE,YAAY,CAAE,sBAACC,IAAD,CAAU,CACtB,MAAI,CAACxB,QAAL,CAAc,CACZO,OAAO,CAAEiB,IADG,CAAd,EAGD,CARH,CASE,KAAK,CAAE,KAAKZ,KAAL,CAAWL,OATpB,EA/CF,CADJ,CA4DM,oBAAC,IAAD,EAAM,KAAK,CAAEY,MAAM,CAACM,UAApB,EACE,oBAAC,gBAAD,EACE,KAAK,CAAEN,MAAM,CAACO,MADhB,CAEE,OAAO,CAAE,kBAAM,CACb,MAAI,CAACf,iBAAL,GACD,CAJH,EAME,oBAAC,IAAD,EAAM,KAAK,CAAEQ,MAAM,CAACQ,UAApB,SANF,CADF,CA5DN,CANF,CADF,CAgFD,C,4BA3HyB9C,S,SAAvBM,c,aA8HL,GAAMgC,CAAAA,MAAM,CAAGS,UAAU,CAACC,MAAX,CAAkB,CAC/BC,SAAS,CAAE,CACTd,IAAI,CAAE,CADG,CAETe,UAAU,CAAE,QAFH,CAGTC,cAAc,CAAE,QAHP,CAITC,eAAe,CAAC,aAJP,CADoB,CAO/Bb,aAAa,CAAC,CACZJ,IAAI,CAAE,IADM,CAEZgB,cAAc,CAAC,QAFH,CAPiB,CAW/BV,KAAK,CAAC,CACJY,QAAQ,CAAClD,OAAO,CAAC,EAAD,CADZ,CAEJmD,KAAK,CAAC,SAFF,CAGJC,UAAU,CAAC,MAHP,CAIJf,OAAO,CAACrC,OAAO,CAAC,EAAD,CAJX,CAKJqD,UAAU,CAACrD,OAAO,CAAC,EAAD,CALd,CAXyB,CAkB/BuC,aAAa,CAAE,CACbe,KAAK,CAAE,KADM,CAEbC,MAAM,CAAEvD,OAAO,CAAC,EAAD,CAFF,CAGbqC,OAAO,CAAErC,OAAO,CAAC,EAAD,CAHH,CAIbwD,WAAW,CAAC,CAJC,CAKbC,YAAY,CAAC,CALA,CAMbC,WAAW,CAAC,MANC,CAObC,YAAY,CAAC3D,OAAO,CAAC,EAAD,CAPP,CAQbqD,UAAU,CAACrD,OAAO,CAAC,EAAD,CARL,CAlBgB,CA4B/B0C,MAAM,CAAE,CACNY,KAAK,CAAE,KADD,CAENC,MAAM,CAAEvD,OAAO,CAAC,EAAD,CAFT,CAGNgD,cAAc,CAAE,QAHV,CAIND,UAAU,CAAE,QAJN,CAKNU,YAAY,CAAEzD,OAAO,CAAC,EAAD,CALf,CAMNiD,eAAe,CAAE,MANX,CAONW,WAAW,CAAE,MAPP,CAQNC,YAAY,CAAE,CACZP,KAAK,CAAE,CADK,CAEZC,MAAM,CAAE,CAFI,CARR,CAYNO,aAAa,CAAE,IAZT,CAaNC,YAAY,CAAE,KAbR,CAcNC,SAAS,CAAE,EAdL,CAeNC,SAAS,CAAEjE,OAAO,CAAC,EAAD,CAfZ,CA5BuB,CA6C/ByC,UAAU,CAAC,CACTT,IAAI,CAAE,IADG,CAETe,UAAU,CAAE,QAFH,CAGTkB,SAAS,CAACjE,OAAO,CAAC,GAAD,CAHR,CA7CoB,CAkD/B2C,UAAU,CAAE,CACVO,QAAQ,CAAElD,OAAO,CAAC,EAAD,CADP,CAEVoD,UAAU,CAAE,MAFF,CAGVD,KAAK,CAAE,MAHG,CAlDmB,CAAlB,CAAf","sourcesContent":["import React,{Component} from 'react';\r\nimport {TextComponent,View,Text,TextInput,TouchableOpacity,StyleSheet} from 'react-native';\r\nimport MyHeader from '../components/MyHeader';\r\nimport {RFValue} from 'react-native-responsive-fontsize';\r\nimport firebase from 'firebase';\r\nimport db from '../config';\r\n\r\nexport default class SettingsScreen extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            emailID:'',\r\n            firstName:'',\r\n            lastName:'',\r\n            address:'',\r\n            contact:'',\r\n            docID:''\r\n        }\r\n    }\r\n    getUserDetails=()=>{\r\n        \r\n         var email = firebase.auth().currentUser.email;\r\n          db.collection('users').where('email_id','==',email).get() \r\n          .then(snapshot => { \r\n              snapshot.forEach(doc => {\r\n                   var data = doc.data() \r\n                   this.setState({ \r\n                       emailID : data.email_id,\r\n                        firstName : data.first_name,\r\n                         lastName : data.last_name,\r\n                          address : data.address,\r\n                           contact : data.contact,\r\n                            docID : doc.id \r\n                        }) \r\n                    }); \r\n                }) \r\n            } \r\nupdateUserDetails=()=>{\r\n     db.collection('users').doc(this.state.docID).update({\r\n          \"first_name\": this.state.firstName,\r\n           \"last_name\" : this.state.lastName,\r\n            \"address\" : this.state.address,\r\n             \"contact\" : this.state.contact,\r\n             })\r\n              Alert.alert(\"Profile Updated Successfully\") \r\n            } \r\n            componentDidMount(){\r\n                 this.getUserDetails()\r\n                 }\r\n                 render() {\r\n                    return (\r\n                      <View style={{ flex: 1 }}>\r\n                        <View style={{ flex: 0.12 }}>\r\n                          <MyHeader title=\"Settings\" navigation={this.props.navigation} />\r\n                        </View>\r\n                \r\n                \r\n                        <View style={styles.formContainer}>\r\n                            <View\r\n                              style={{\r\n                                flex: 0.66,\r\n                                padding: RFValue(10),\r\n                              }}\r\n                            >\r\n                            <Text style={styles.label}>First Name </Text>\r\n                              <TextInput\r\n                                style={styles.formTextInput}\r\n                                placeholder={\"First Name\"}\r\n                                maxLength={12}\r\n                                onChangeText={(text) => {\r\n                                  this.setState({\r\n                                    firstName: text,\r\n                                  });\r\n                                }}\r\n                                value={this.state.firstName}\r\n                              />\r\n                \r\n                            <Text style={styles.label}>Last Name </Text>\r\n                              <TextInput\r\n                                style={styles.formTextInput}\r\n                                placeholder={\"Last Name\"}\r\n                                maxLength={12}\r\n                                onChangeText={(text) => {\r\n                                  this.setState({\r\n                                    lastName: text,\r\n                                  });\r\n                                }}\r\n                                value={this.state.lastName}\r\n                              />\r\n                \r\n                                <Text style={styles.label}>Contact </Text>\r\n                              <TextInput\r\n                                style={styles.formTextInput}\r\n                                placeholder={\"Contact\"}\r\n                                maxLength={10}\r\n                                keyboardType={\"numeric\"}\r\n                                onChangeText={(text) => {\r\n                                  this.setState({\r\n                                    contact: text,\r\n                                  });\r\n                                }}\r\n                                value={this.state.contact}\r\n                              />\r\n                \r\n                                <Text style={styles.label}>Address </Text>\r\n                              <TextInput\r\n                                style={styles.formTextInput}\r\n                                placeholder={\"Address\"}\r\n                                multiline={true}\r\n                                onChangeText={(text) => {\r\n                                  this.setState({\r\n                                    address: text,\r\n                                  });\r\n                                }}\r\n                                value={this.state.address}\r\n                              />\r\n                            </View>\r\n                              <View style={styles.buttonView}>\r\n                                <TouchableOpacity\r\n                                  style={styles.button}\r\n                                  onPress={() => {\r\n                                    this.updateUserDetails();\r\n                                  }}\r\n                                >\r\n                                  <Text style={styles.buttonText}>Save</Text>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                          </View>\r\n                      </View>\r\n                    );\r\n                  }\r\n                }\r\n                \r\n                const styles = StyleSheet.create({\r\n                  container: {\r\n                    flex: 1,\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    backgroundColor:\"lightyellow\"\r\n                  },\r\n                  formContainer:{\r\n                    flex: 0.88,\r\n                    justifyContent:'center'\r\n                  },\r\n                  label:{\r\n                    fontSize:RFValue(18),\r\n                    color:\"#717D7E\",\r\n                    fontWeight:'bold',\r\n                    padding:RFValue(10),\r\n                    marginLeft:RFValue(20)\r\n                  },\r\n                  formTextInput: {\r\n                    width: \"90%\",\r\n                    height: RFValue(50),\r\n                    padding: RFValue(10),\r\n                    borderWidth:1,\r\n                    borderRadius:2,\r\n                    borderColor:\"grey\",\r\n                    marginBottom:RFValue(20),\r\n                    marginLeft:RFValue(20)\r\n                  },\r\n                  button: {\r\n                    width: \"75%\",\r\n                    height: RFValue(60),\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    borderRadius: RFValue(50),\r\n                    backgroundColor: \"blue\",\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: {\r\n                      width: 0,\r\n                      height: 8,\r\n                    },\r\n                    shadowOpacity: 0.44,\r\n                    shadowRadius: 10.32,\r\n                    elevation: 16,\r\n                    marginTop: RFValue(20),\r\n                  },\r\n                  buttonView:{\r\n                    flex: 0.22,\r\n                    alignItems: \"center\",\r\n                    marginTop:RFValue(100)\r\n                },\r\n                  buttonText: {\r\n                    fontSize: RFValue(23),\r\n                    fontWeight: \"bold\",\r\n                    color: \"#fff\",\r\n                  },\r\n                });"]},"metadata":{},"sourceType":"module"}