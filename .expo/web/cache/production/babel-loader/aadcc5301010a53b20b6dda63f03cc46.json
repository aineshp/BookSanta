{"ast":null,"code":"'use strict';var utils=require(\"./../utils\");module.exports=utils.isStandardBrowserEnv()?function standardBrowserEnv(){var msie=/(msie|trident)/i.test(navigator.userAgent);var urlParsingNode=document.createElement('a');var originURL;function resolveURL(url){var href=url;if(msie){urlParsingNode.setAttribute('href',href);href=urlParsingNode.href;}urlParsingNode.setAttribute('href',href);return{href:urlParsingNode.href,protocol:urlParsingNode.protocol?urlParsingNode.protocol.replace(/:$/,''):'',host:urlParsingNode.host,search:urlParsingNode.search?urlParsingNode.search.replace(/^\\?/,''):'',hash:urlParsingNode.hash?urlParsingNode.hash.replace(/^#/,''):'',hostname:urlParsingNode.hostname,port:urlParsingNode.port,pathname:urlParsingNode.pathname.charAt(0)==='/'?urlParsingNode.pathname:'/'+urlParsingNode.pathname};}originURL=resolveURL(window.location.href);return function isURLSameOrigin(requestURL){var parsed=utils.isString(requestURL)?resolveURL(requestURL):requestURL;return parsed.protocol===originURL.protocol&&parsed.host===originURL.host;};}():function nonStandardBrowserEnv(){return function isURLSameOrigin(){return true;};}();","map":{"version":3,"sources":["C:/Users/aines/Desktop/book-santa-stage-11-master/node_modules/react-native-google-books/node_modules/axios/lib/helpers/isURLSameOrigin.js"],"names":["utils","require","module","exports","isStandardBrowserEnv","standardBrowserEnv","msie","test","navigator","userAgent","urlParsingNode","document","createElement","originURL","resolveURL","url","href","setAttribute","protocol","replace","host","search","hash","hostname","port","pathname","charAt","window","location","isURLSameOrigin","requestURL","parsed","isString","nonStandardBrowserEnv"],"mappings":"AAAA,aAEA,GAAIA,CAAAA,KAAK,CAAGC,OAAO,cAAnB,CAEAC,MAAM,CAACC,OAAP,CACEH,KAAK,CAACI,oBAAN,GAIC,QAASC,CAAAA,kBAAT,EAA8B,CAC7B,GAAIC,CAAAA,IAAI,CAAG,kBAAkBC,IAAlB,CAAuBC,SAAS,CAACC,SAAjC,CAAX,CACA,GAAIC,CAAAA,cAAc,CAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAArB,CACA,GAAIC,CAAAA,SAAJ,CAQA,QAASC,CAAAA,UAAT,CAAoBC,GAApB,CAAyB,CACvB,GAAIC,CAAAA,IAAI,CAAGD,GAAX,CAEA,GAAIT,IAAJ,CAAU,CAERI,cAAc,CAACO,YAAf,CAA4B,MAA5B,CAAoCD,IAApC,EACAA,IAAI,CAAGN,cAAc,CAACM,IAAtB,CACD,CAEDN,cAAc,CAACO,YAAf,CAA4B,MAA5B,CAAoCD,IAApC,EAGA,MAAO,CACLA,IAAI,CAAEN,cAAc,CAACM,IADhB,CAELE,QAAQ,CAAER,cAAc,CAACQ,QAAf,CAA0BR,cAAc,CAACQ,QAAf,CAAwBC,OAAxB,CAAgC,IAAhC,CAAsC,EAAtC,CAA1B,CAAsE,EAF3E,CAGLC,IAAI,CAAEV,cAAc,CAACU,IAHhB,CAILC,MAAM,CAAEX,cAAc,CAACW,MAAf,CAAwBX,cAAc,CAACW,MAAf,CAAsBF,OAAtB,CAA8B,KAA9B,CAAqC,EAArC,CAAxB,CAAmE,EAJtE,CAKLG,IAAI,CAAEZ,cAAc,CAACY,IAAf,CAAsBZ,cAAc,CAACY,IAAf,CAAoBH,OAApB,CAA4B,IAA5B,CAAkC,EAAlC,CAAtB,CAA8D,EAL/D,CAMLI,QAAQ,CAAEb,cAAc,CAACa,QANpB,CAOLC,IAAI,CAAEd,cAAc,CAACc,IAPhB,CAQLC,QAAQ,CAAGf,cAAc,CAACe,QAAf,CAAwBC,MAAxB,CAA+B,CAA/B,IAAsC,GAAvC,CACAhB,cAAc,CAACe,QADf,CAEA,IAAMf,cAAc,CAACe,QAV1B,CAAP,CAYD,CAEDZ,SAAS,CAAGC,UAAU,CAACa,MAAM,CAACC,QAAP,CAAgBZ,IAAjB,CAAtB,CAQA,MAAO,SAASa,CAAAA,eAAT,CAAyBC,UAAzB,CAAqC,CAC1C,GAAIC,CAAAA,MAAM,CAAI/B,KAAK,CAACgC,QAAN,CAAeF,UAAf,CAAD,CAA+BhB,UAAU,CAACgB,UAAD,CAAzC,CAAwDA,UAArE,CACA,MAAQC,CAAAA,MAAM,CAACb,QAAP,GAAoBL,SAAS,CAACK,QAA9B,EACFa,MAAM,CAACX,IAAP,GAAgBP,SAAS,CAACO,IADhC,CAED,CAJD,CAKD,CAlDD,EAJA,CAyDC,QAASa,CAAAA,qBAAT,EAAiC,CAChC,MAAO,SAASJ,CAAAA,eAAT,EAA2B,CAChC,MAAO,KAAP,CACD,CAFD,CAGD,CAJD,EA1DF","sourcesContent":["'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    var msie = /(msie|trident)/i.test(navigator.userAgent);\n    var urlParsingNode = document.createElement('a');\n    var originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      var href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n                  urlParsingNode.pathname :\n                  '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })()\n);\n"]},"metadata":{},"sourceType":"script"}