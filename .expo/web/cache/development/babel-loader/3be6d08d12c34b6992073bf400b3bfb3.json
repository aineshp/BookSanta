{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\aines\\\\Desktop\\\\book-santa-stage-11-master\\\\screens\\\\SettingsScreen.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { TextComponent } from \"react-native-web/dist/index\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport MyHeader from \"../components/MyHeader\";\nimport firebase from 'firebase';\nimport db from \"../config\";\n\nvar SettingsScreen = function (_Component) {\n  _inherits(SettingsScreen, _Component);\n\n  var _super = _createSuper(SettingsScreen);\n\n  function SettingsScreen() {\n    var _this;\n\n    _classCallCheck(this, SettingsScreen);\n\n    _this = _super.call(this);\n\n    _this.getUserDetails = function () {\n      var email = firebase.auth().currentUser.email;\n      db.collection('users').where('email_id', '==', email).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          var data = doc.data();\n\n          _this.setState({\n            emailID: data.email_id,\n            firstName: data.first_name,\n            lastName: data.last_name,\n            address: data.address,\n            contact: data.contact,\n            docID: doc.id\n          });\n        });\n      });\n    };\n\n    _this.updateUserDetails = function () {\n      db.collection('users').doc(_this.state.docID).update({\n        \"first_name\": _this.state.firstName,\n        \"last_name\": _this.state.lastName,\n        \"address\": _this.state.address,\n        \"contact\": _this.state.contact\n      });\n      Alert.alert(\"Profile Updated Successfully\");\n    };\n\n    _this.state = {\n      emailID: '',\n      firstName: '',\n      lastName: '',\n      address: '',\n      contact: '',\n      docID: ''\n    };\n    return _this;\n  }\n\n  _createClass(SettingsScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getUserDetails();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }, React.createElement(MyHeader, {\n        title: \"Settings\",\n        navigation: this.props.navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }), React.createElement(View, {\n        style: styles.formContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }, React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: \"First Name\",\n        maxLength: 10,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            firstName: text\n          });\n        },\n        value: this.state.firstName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }\n      }), React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: \"Last Name\",\n        maxLength: 10,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            lastName: text\n          });\n        },\n        value: this.state.lastName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }\n      }), React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: \"Contact\",\n        maxLength: 10,\n        keyboardType: 'numeric',\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            contact: text\n          });\n        },\n        value: this.state.contact,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 16\n        }\n      }), React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: \"Address\",\n        multiline: true,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            address: text\n          });\n        },\n        value: this.state.address,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          _this2.updateUserDetails();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 33\n        }\n      }, \" Save \"))));\n    }\n  }]);\n\n  return SettingsScreen;\n}(Component);\n\nexport { SettingsScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  formContainer: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  formTextInput: {\n    height: 50,\n    width: 300,\n    borderRadius: 10,\n    borderWidth: 1.5,\n    margin: 10,\n    padding: 10\n  },\n  button: {\n    width: 300,\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 25,\n    backgroundColor: 'lightgreen',\n    margin: 10,\n    marginLeft: 40\n  },\n  buttonText: {\n    color: 'blue',\n    fontWeight: '200',\n    fontSize: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/aines/Desktop/book-santa-stage-11-master/screens/SettingsScreen.js"],"names":["React","Component","TextComponent","MyHeader","firebase","db","SettingsScreen","getUserDetails","email","auth","currentUser","collection","where","get","then","snapshot","forEach","doc","data","setState","emailID","email_id","firstName","first_name","lastName","last_name","address","contact","docID","id","updateUserDetails","state","update","Alert","alert","styles","container","props","navigation","formContainer","formTextInput","text","button","buttonText","StyleSheet","create","flex","justifyContent","alignItems","height","width","borderRadius","borderWidth","margin","padding","backgroundColor","marginLeft","color","fontWeight","fontSize"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\r\nimport {TextComponent,View,Text,TextInput,TouchableOpacity,StyleSheet} from 'react-native';\r\nimport MyHeader from '../components/MyHeader';\r\nimport firebase from 'firebase';\r\nimport db from '../config';\r\n\r\nexport default class SettingsScreen extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            emailID:'',\r\n            firstName:'',\r\n            lastName:'',\r\n            address:'',\r\n            contact:'',\r\n            docID:''\r\n        }\r\n    }\r\n    getUserDetails=()=>{\r\n        \r\n         var email = firebase.auth().currentUser.email;\r\n          db.collection('users').where('email_id','==',email).get() \r\n          .then(snapshot => { \r\n              snapshot.forEach(doc => {\r\n                   var data = doc.data() \r\n                   this.setState({ \r\n                       emailID : data.email_id,\r\n                        firstName : data.first_name,\r\n                         lastName : data.last_name,\r\n                          address : data.address,\r\n                           contact : data.contact,\r\n                            docID : doc.id \r\n                        }) \r\n                    }); \r\n                }) \r\n            } \r\nupdateUserDetails=()=>{\r\n     db.collection('users').doc(this.state.docID).update({\r\n          \"first_name\": this.state.firstName,\r\n           \"last_name\" : this.state.lastName,\r\n            \"address\" : this.state.address,\r\n             \"contact\" : this.state.contact,\r\n             })\r\n              Alert.alert(\"Profile Updated Successfully\") \r\n            } \r\n            componentDidMount(){\r\n                 this.getUserDetails()\r\n                 }\r\nrender(){\r\n    return(\r\n        <View style={styles.container}>\r\n            <MyHeader title='Settings'\r\n                       navigation={this.props.navigation}/>\r\n          <View style={styles.formContainer}>\r\n              <TextInput style={styles.formTextInput}\r\n                         placeholder={\"First Name\"}\r\n                        maxLength={10}\r\n                        onChangeText={(text)=>{\r\n                         this.setState({\r\n                             firstName:text\r\n                         })\r\n                        }}\r\n                        value={this.state.firstName}/>\r\n              <TextInput style={styles.formTextInput}\r\n                         placeholder={\"Last Name\"}\r\n                        maxLength={10}\r\n                        onChangeText={(text)=>{\r\n                         this.setState({\r\n                             lastName:text\r\n                         })\r\n                        }}\r\n                        value={this.state.lastName}/> \r\n               <TextInput style={styles.formTextInput}\r\n                         placeholder={\"Contact\"}\r\n                        maxLength={10}\r\n                        keyboardType={'numeric'}\r\n                        onChangeText={(text)=>{\r\n                         this.setState({\r\n                             contact:text\r\n                         })\r\n                        }}\r\n                        value={this.state.contact}/>\r\n                <TextInput style={styles.formTextInput}\r\n                         placeholder={\"Address\"}\r\n                        multiline={true}\r\n                        onChangeText={(text)=>{\r\n                         this.setState({\r\n                             address:text\r\n                         })\r\n                        }}\r\n                        value={this.state.address}/>                                            \r\n          </View>\r\n          <View>\r\n              <TouchableOpacity style={styles.button}\r\n                                onPress={()=>{\r\n                                    this.updateUserDetails()\r\n                                }}>\r\n                                <Text style={styles.buttonText}> Save </Text>   \r\n                                </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n    )\r\n}\r\n}\r\nconst styles = StyleSheet.create({\r\ncontainer:{\r\nflex:1,\r\n},\r\nformContainer:{\r\njustifyContent:'center',\r\nalignItems:'center',\r\n},\r\nformTextInput:{\r\n    height:50,\r\n    width:300,\r\n    borderRadius:10,\r\n    borderWidth:1.5,\r\n    margin:10,\r\n    padding:10,\r\n},\r\nbutton:{\r\n    width:300,\r\n    height:50,\r\n    justifyContent:'center',\r\n    alignItems:'center',\r\n    borderRadius:25,\r\n    backgroundColor:'lightgreen',\r\n    margin:10,\r\n    marginLeft:40,\r\n},\r\nbuttonText:{\r\n    color:'blue',\r\n    fontWeight:'200',\r\n    fontSize:20,\r\n},\r\n})"]},"metadata":{},"sourceType":"module"}