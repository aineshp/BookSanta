{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\aines\\\\Desktop\\\\book-santa-stage-11-master\\\\screens\\\\BookRequestScreen.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { GoogleBookSearch } from 'react-native-google-books';\nimport firebase from 'firebase';\nimport db from \"../config\";\nimport MyHeader from \"../components/MyHeader\";\nimport BookSearch from 'react-native-google-books/BookSearch';\nimport { FlatList } from 'react-native-gesture-handler';\n\nvar BookRequestScreen = function (_Component) {\n  _inherits(BookRequestScreen, _Component);\n\n  var _super = _createSuper(BookRequestScreen);\n\n  function BookRequestScreen() {\n    var _this;\n\n    _classCallCheck(this, BookRequestScreen);\n\n    _this = _super.call(this);\n\n    _this.addRequest = function _callee(BookName, ReasonForRequest) {\n      var userID, randomRequestID, books;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              userID = _this.state.userID;\n              randomRequestID = _this.createUniqueId();\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(BookSearch.searchbook(bookName, 'AIzaSyAV6CZ9luleYpvAKf5lmeVN6TYnhEhz3OU'));\n\n            case 4:\n              books = _context.sent;\n              db.collection('requested_books').add({\n                \"user_id\": userID,\n                \"book_name\": BookName,\n                \"reason_to_request\": ReasonForRequest,\n                \"request_id\": randomRequestID,\n                \"book_status\": 'requested',\n                \"date\": firebase.firestore.FieldValue.serverTimestamp(),\n                \"image_link\": books.data[0].volumeInfo.imageLinks.smallThumbnail\n              });\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(_this.getBookRequest());\n\n            case 8:\n              db.collection('User').where('email_id', '==', 'user_id').get().then().then(function (snapshot) {\n                snapshot.forEach(function (doc) {\n                  db.collection('User').doc(doc.id).update({\n                    is_book_request_active: true\n                  });\n                });\n              });\n\n              _this.setState({\n                bookName: '',\n                ReasonForRequest: '',\n                requestID: ''\n              });\n\n              return _context.abrupt(\"return\", Alert.alert(\"Book Requested Successfully\"));\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getBookRequest = function () {\n      var bookRequest = db.collection('requested_books').where('user_id', '==', _this.state.userId).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          if (doc.data().book_status !== 'received') {\n            _this.setState({\n              requestID: doc.data().request_id,\n              requestedBookName: doc.data().book_name,\n              book_status: doc.data().book_status,\n              doc_id: doc.id\n            });\n          }\n        });\n      });\n    };\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item,\n          i = _ref.i;\n      return React.createElement(TouchableHighlight, {\n        style: {\n          alignItems: \"center\",\n          backgroundColor: \"#DDDDDD\",\n          padding: 10,\n          width: '90%'\n        },\n        activeOpacity: 0.6,\n        underlayColor: \"#DDDDDD\",\n        onPress: function onPress() {\n          _this.setState({\n            showFlatlist: false,\n            bookName: item.volumeInfo.title\n          });\n        },\n        bottomDivider: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 5\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 7\n        }\n      }, item.volumeInfo.title));\n    };\n\n    _this.state = {\n      userId: firebase.auth().currentUser.email,\n      BookName: \"\",\n      ReasonForRequest: \"\",\n      is_book_request_active: \"\",\n      requestedBookName: \"\",\n      book_status: \"\",\n      requestID: \"\",\n      userDocID: '',\n      doc_id: '',\n      image_link: '',\n      dataSource: \"\",\n      showFlatlist: false\n    };\n    return _this;\n  }\n\n  _createClass(BookRequestScreen, [{\n    key: \"createUniqueId\",\n    value: function createUniqueId() {\n      return Math.random().toString(36).substring(7);\n    }\n  }, {\n    key: \"getIsBookRequestActive\",\n    value: function getIsBookRequestActive() {\n      var _this2 = this;\n\n      db.collection('User').where('email_id', '==', this.state.userID).onSnapshot(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          _this2.setState({\n            is_book_request_active: doc.data().is_book_request_active,\n            userDocId: doc.id\n          });\n        });\n      });\n    }\n  }, {\n    key: \"getBooksFromAPI\",\n    value: function getBooksFromAPI(BookName) {\n      var books;\n      return _regeneratorRuntime.async(function getBooksFromAPI$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              this.setState({\n                BookName: book_name\n              });\n\n              if (!(BookName.length > 2)) {\n                _context2.next = 6;\n                break;\n              }\n\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(BookSearch.searchbook(BookName, 'AIzaSyAV6CZ9luleYpvAKf5lmeVN6TYnhEhz3OU'));\n\n            case 4:\n              books = _context2.sent;\n              this.setState({\n                datasource: books.data,\n                showFlatList: true\n              });\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getBookRequest(), this.getIsBookRequestActive();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.is_book_request_active === 'true') {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 1\n          }\n        }, React.createElement(View, {\n          style: {\n            borderColor: \"orange\",\n            borderWidth: 2,\n            justifyContent: 'center',\n            alignItems: 'center',\n            padding: 10,\n            margin: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 1\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 1\n          }\n        }, \"Book Name\"), React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 1\n          }\n        }, this.state.requestedBookName)), React.createElement(View, {\n          style: {\n            borderColor: \"orange\",\n            borderWidth: 2,\n            justifyContent: 'center',\n            alignItems: 'center',\n            padding: 10,\n            margin: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 1\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 1\n          }\n        }, \" Book Status \"), React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 1\n          }\n        }, this.state.bookStatus)));\n      } else {\n        return React.createElement(View, {\n          style: {\n            flex: 1\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 11\n          }\n        }, React.createElement(MyHeader, {\n          title: \"Request Book\",\n          navigation: this.props.navigation,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 11\n          }\n        }), React.createElement(KeyboardAvoidingView, {\n          style: styles.keyBoardStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }\n        }, React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }\n        }, React.createElement(TextInput, {\n          style: styles.formTextInput,\n          placeholder: \"Enter Book Name\",\n          onChangeText: function onChangeText(text) {\n            _this3.setState({\n              BookName: text\n            });\n          },\n          value: this.state.BookName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }\n        }), this.state.showFlatList ? React.createElement(FlatList, {\n          data: this.state.dataSource,\n          renderItem: this.renderItem,\n          enableEmptySections: true,\n          style: {\n            marginTop: 10\n          },\n          keyExtractor: function keyExtractor(item, index) {\n            return index.toString();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 16\n          }\n        }) : React.createElement(View, {\n          style: {\n            alignItems: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 18\n          }\n        }, React.createElement(TextInput, {\n          style: [styles.formTextInput, {\n            height: 300\n          }],\n          multiline: true,\n          numberOfLines: 8,\n          placeholder: \"Why do you need the book\",\n          onChangeText: function onChangeText(text) {\n            _this3.setState({\n              ReasonForRequest: text\n            });\n          },\n          value: this.state.ReasonForRequest,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: styles.button,\n          onPress: function onPress() {\n            _this3.addRequest(_this3.state.BookName, _this3.state.ReasonForRequest);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }\n        }, \"Request\"))))));\n      }\n    }\n  }]);\n\n  return BookRequestScreen;\n}(Component);\n\nexport { BookRequestScreen as default };\nvar styles = StyleSheet.create({\n  keyBoardStyle: {\n    width: 300,\n    height: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 15,\n    margin: 10,\n    padding: 10\n  },\n  formTextInput: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 190,\n    marginLeft: 80,\n    padding: 10,\n    width: 150,\n    height: 50\n  },\n  button: {\n    marginTop: 50,\n    marginLeft: 90,\n    height: 50,\n    width: 100,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 5,\n    backgroundColor: 'orange'\n  }\n});","map":{"version":3,"sources":["C:/Users/aines/Desktop/book-santa-stage-11-master/screens/BookRequestScreen.js"],"names":["React","Component","GoogleBookSearch","firebase","db","MyHeader","BookSearch","FlatList","BookRequestScreen","addRequest","BookName","ReasonForRequest","userID","state","randomRequestID","createUniqueId","searchbook","bookName","books","collection","add","firestore","FieldValue","serverTimestamp","data","volumeInfo","imageLinks","smallThumbnail","getBookRequest","where","get","then","snapshot","forEach","doc","id","update","is_book_request_active","setState","requestID","Alert","alert","bookRequest","userId","book_status","request_id","requestedBookName","book_name","doc_id","renderItem","item","i","alignItems","backgroundColor","padding","width","showFlatlist","title","auth","currentUser","email","userDocID","image_link","dataSource","Math","random","toString","substring","onSnapshot","querySnapshot","userDocId","length","datasource","showFlatList","getIsBookRequestActive","flex","justifyContent","borderColor","borderWidth","margin","bookStatus","props","navigation","styles","keyBoardStyle","formTextInput","text","marginTop","index","height","button","StyleSheet","create","borderRadius","marginLeft"],"mappings":"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","sourcesContent":["import  React, {Component} from 'react';\r\nimport {View,Text,TextInput,StyleSheet,TouchableOpacity, Alert,Modal,KeyboardAvoidingView,ScrollView,TouchableHighlight} from 'react-native';\r\nimport {GoogleBookSearch} from 'react-native-google-books';\r\nimport firebase from 'firebase';\r\nimport db from '../config';\r\nimport MyHeader from '../components/MyHeader';\r\nimport BookSearch from 'react-native-google-books/BookSearch';\r\nimport { FlatList } from 'react-native-gesture-handler';\r\nexport default class BookRequestScreen extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state ={ userId : firebase.auth().currentUser.email, \r\n          BookName:\"\", \r\n          ReasonForRequest:\"\", \r\n          is_book_request_active : \"\", \r\n          requestedBookName: \"\", \r\n          book_status:\"\", \r\n          requestID:\"\", \r\n          userDocID: '', \r\n          doc_id :'', \r\n          image_link: '', \r\n          dataSource:\"\", \r\n          showFlatlist: false \r\n        } }\r\n      \r\n    \r\n      createUniqueId(){\r\n        return Math.random().toString(36).substring(7);\r\n      }\r\n      addRequest= async (BookName,ReasonForRequest)=>{\r\n        var userID = this.state.userID\r\n        var randomRequestID = this.createUniqueId()\r\n        var books=await BookSearch.searchbook(bookName,'AIzaSyAV6CZ9luleYpvAKf5lmeVN6TYnhEhz3OU')\r\n        db.collection('requested_books').add({\r\n            \"user_id\": userID,\r\n            \"book_name\":BookName,\r\n            \"reason_to_request\":ReasonForRequest,\r\n            \"request_id\"  : randomRequestID,\r\n            \"book_status\":'requested',\r\n            \"date\":firebase.firestore.FieldValue.serverTimestamp(),\r\n            \"image_link\": books.data[0].volumeInfo.imageLinks.smallThumbnail\r\n    \r\n    })\r\n      \r\n\r\n    await this.getBookRequest()\r\n    db.collection('User').where('email_id','==','user_id').get()\r\n    .then()\r\n    .then((snapshot)=>{\r\n      snapshot.forEach((doc)=>{\r\n        db.collection('User').doc(doc.id).update({\r\n          is_book_request_active:true\r\n        })\r\n      })\r\n    })\r\n    this.setState({\r\n      bookName:'',\r\n      ReasonForRequest:'',\r\n      requestID:'',\r\n\r\n    })\r\n    return Alert.alert(\"Book Requested Successfully\") \r\n  } \r\n\r\n getIsBookRequestActive(){\r\n    db.collection('User') \r\n    .where('email_id','==',this.state.userID) \r\n    .onSnapshot(querySnapshot => { querySnapshot.forEach(doc => {\r\n       this.setState({ \r\n         is_book_request_active:doc.data().is_book_request_active, \r\n         userDocId : doc.id \r\n        })\r\n       })\r\n       }) }\r\n  \r\n\r\ngetBookRequest=()=>{\r\n  var bookRequest=db.collection('requested_books').where('user_id','==',this.state.userId)\r\n  .get()\r\n  .then((snapshot)=>{\r\n    snapshot.forEach((doc)=>{\r\n  if(doc.data().book_status!=='received'){\r\n    this.setState({\r\n      requestID:doc.data().request_id,\r\n      requestedBookName:doc.data().book_name,\r\n      book_status:doc.data().book_status,\r\n      doc_id:doc.id\r\n    })\r\n  }\r\n    })\r\n  })\r\n}\r\n\r\nasync getBooksFromAPI(BookName){\r\nthis.setState({\r\n  BookName:book_name,\r\n})\r\nif(BookName.length>2){\r\n  var books= await BookSearch.searchbook(BookName,'AIzaSyAV6CZ9luleYpvAKf5lmeVN6TYnhEhz3OU')\r\n  this.setState({datasource:books.data,\r\n                showFlatList:true})\r\n}\r\n}\r\ncomponentDidMount(){\r\n  this.getBookRequest(),\r\n  this.getIsBookRequestActive()\r\n}\r\nrenderItem=({item,i})=>{\r\n  return(\r\n    <TouchableHighlight style={{ alignItems: \"center\", backgroundColor: \"#DDDDDD\", \r\n    padding: 10, width: '90%', }} \r\n    activeOpacity={0.6} underlayColor=\"#DDDDDD\" \r\n    onPress={()=>{\r\n       this.setState({\r\n          showFlatlist:false,\r\n           bookName:item.volumeInfo.title, \r\n           })} }\r\n            bottomDivider>\r\n      <Text>{item.volumeInfo.title}</Text>\r\n    </TouchableHighlight>\r\n  )\r\n}\r\n    render(){\r\n      if(this.state.is_book_request_active==='true'){\r\n        return(\r\n<View style = {{flex:1,justifyContent:'center'}}> \r\n<View style={{borderColor:\"orange\",borderWidth:2,justifyContent:'center',\r\nalignItems:'center',padding:10,margin:10}}> \r\n<Text>Book Name</Text> \r\n<Text>{this.state.requestedBookName}</Text> \r\n</View> \r\n<View style={{borderColor:\"orange\",borderWidth:2,justifyContent:'center',\r\nalignItems:'center',padding:10,margin:10}}> \r\n<Text> Book Status </Text> \r\n<Text>{this.state.bookStatus}</Text> \r\n</View>\r\n  </View> ) }\r\n        \r\n      else{\r\n    \r\n        return(\r\n          <View style={{flex:1}}>\r\n          <MyHeader title=\"Request Book\" navigation ={this.props.navigation}/>\r\n            <KeyboardAvoidingView style={styles.keyBoardStyle}>\r\n              <View>\r\n              <TextInput\r\n                style ={styles.formTextInput}\r\n                placeholder={\"Enter Book Name\"}\r\n                onChangeText={(text)=>{\r\n                    this.setState({\r\n                        BookName:text\r\n                    })\r\n                }}\r\n                value={this.state.BookName}\r\n              />\r\n              {this.state.showFlatList ?\r\n              (<FlatList data={this.state.dataSource} \r\n                renderItem={this.renderItem} \r\n                enableEmptySections={true} \r\n                style={{ marginTop: 10 }} \r\n                keyExtractor={(item, index) => index.toString()}/>)\r\n               :(\r\n               \r\n              \r\n                 <View style={{alignItems:'center'}}>\r\n              <TextInput\r\n                style ={[styles.formTextInput,{height:300}]}\r\n                multiline\r\n                numberOfLines ={8}\r\n                placeholder={\"Why do you need the book\"}\r\n                onChangeText ={(text)=>{\r\n                    this.setState({\r\n                        ReasonForRequest:text\r\n                    })\r\n                }}\r\n                value ={this.state.ReasonForRequest}\r\n              />\r\n              <TouchableOpacity\r\n                style={styles.button}\r\n                onPress={()=>{this.addRequest(this.state.BookName,this.state.ReasonForRequest)}}\r\n                >\r\n                <Text>Request</Text>\r\n              </TouchableOpacity>\r\n              </View>\r\n               )\r\n              }\r\n              </View>\r\n            </KeyboardAvoidingView>\r\n        </View>\r\n        )\r\n              }\r\n              \r\n    }\r\n} \r\nconst styles = StyleSheet.create({\r\nkeyBoardStyle:{\r\n  width:300,\r\n  height:50,\r\n  alignItems:'center',\r\n  justifyContent:'center',\r\n  borderRadius:15,\r\n  margin:10,\r\n  padding:10,\r\n},\r\nformTextInput:{\r\n  justifyContent:'center',\r\n  alignItems:'center',\r\n  marginTop:190,\r\n  marginLeft:80,\r\n  padding:10,\r\n  width:150,\r\n  height:50,\r\n},\r\nbutton:{\r\n  marginTop:50,\r\n  marginLeft:90,\r\n  height:50,\r\n  width:100,\r\n  alignItems:'center',\r\n  justifyContent:'center',\r\n  borderRadius:5,\r\n  backgroundColor:'orange',\r\n}\r\n})"]},"metadata":{},"sourceType":"module"}